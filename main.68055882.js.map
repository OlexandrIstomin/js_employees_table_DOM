{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","thCollection","querySelectorAll","arrayRows","tBodies","rows","forEach","element","dataset","count","checkCount","notification","showNotification","message","inform","div","createElement","classList","add","textContent","style","cssText","setAttribute","form","append","body","addEventListener","e","th","target","closest","tr","sort","sorting","a","b","firstElement","cells","cellIndex","secondtElement","localeCompare","newfirseElement","slice","newSecondElement","parseFloat","el","remove","insertAdjacentHTML","ev","preventDefault","employerTR","objectEmployer","name","elements","value","position","office","age","salary","length","Number","isNaN","Intl","NumberFormat","format","i","td","content","input","focus","onkeydown","code","blur","tableDataCell","setData"],"mappings":"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","file":"main.68055882.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst thCollection = document.querySelectorAll('th');\n/* arrayRows и notification объявляется в глобальной области т.к.\nбудет обновлена в нескольких событиях */\nlet arrayRows = [...table.tBodies[0].rows];\n\n// Вместе с checkCount нужно для корректной сортировки\nthCollection.forEach(element => {\n  element.dataset.count = 0;\n});\n\nlet checkCount = 0;\n\nlet notification = document.querySelector('.notification');\n\ndocument.body.addEventListener('click', e => {\n  const th = e.target.closest('th');\n  const tr = e.target.closest('tr');\n\n  function sorting(a, b) {\n    const firstElement = a.cells[th.cellIndex].textContent;\n    const secondtElement = b.cells[th.cellIndex].textContent;\n\n    switch (th.cellIndex) {\n      case 0:\n      case 1:\n      case 2:\n        return +th.dataset.count === 0\n          ? firstElement.localeCompare(secondtElement)\n          : secondtElement.localeCompare(firstElement);\n\n      case 3:\n        return +th.dataset.count === 0\n          ? +firstElement - +secondtElement\n          : +secondtElement - +firstElement;\n\n      case 4:\n        const newfirseElement = firstElement.slice(1);\n        const newSecondElement = secondtElement.slice(1);\n\n        return +th.dataset.count === 0\n          ? parseFloat(newfirseElement) - parseFloat(newSecondElement)\n          : parseFloat(newSecondElement) - parseFloat(newfirseElement);\n    }\n  }\n\n  if (th) {\n    if (checkCount > 0 && th.dataset.count === '0') {\n      thCollection.forEach(element => {\n        element.dataset.count = 0;\n        checkCount = 0;\n      });\n    }\n\n    arrayRows.sort(sorting);\n    +th.dataset.count === 0 ? ++th.dataset.count : --th.dataset.count;\n    ++checkCount;\n\n    table.tBodies[0].append(...arrayRows);\n  }\n\n  if (tr && !tr.closest('thead')) {\n    arrayRows.forEach(el => {\n      el.classList.remove('active');\n    });\n    tr.classList.add('active');\n  }\n\n  /* обновить переменную, что-бы удалить\n  сообщение при попытке ввода новых данных */\n  notification = document.querySelector('.notification');\n\n  if (notification && e.target.closest('input')) {\n    notification.remove();\n  }\n});\n\nfunction showNotification(message, inform) {\n  const div = document.createElement('div');\n\n  div.classList.add(message, 'notification');\n  div.textContent = inform;\n\n  div.style.cssText = 'left: 0; top: calc(100% + 10px); font-size: 18px;'\n    + 'color: black; display: flex; justify-content: center;'\n    + 'align-items: center; text-transform: uppercase;';\n  div.setAttribute('data-qa', 'notification');\n\n  form.append(div);\n}\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nform.insertAdjacentHTML('afterbegin',\n  `<label>Name:\n    <input required name=\"name\" type=\"text\" data-qa=\"name\">\n  </label>\n  <label>Position:\n    <input required name=\"position\" type=\"text\" data-qa=\"position\">\n  </label>\n  <label>Office:\n    <select name=\"office\" type=\"text\" data-qa=\"office\">\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label>Age:\n    <input required name=\"age\" type=\"number\" data-qa=\"age\">\n  </label>\n  <label>Salary:\n    <input name=\"salary\" type=\"number\" data-qa=\"salary\">\n  </label>\n  <button type=\"submit\" class=\"submit\">Save to table</button>`\n);\n\ndocument.body.append(form);\n\nform.addEventListener('submit', ev => {\n  ev.preventDefault();\n\n  const employerTR = document.createElement('tr');\n\n  const objectEmployer = {\n    name: form.elements.name.value,\n    position: form.elements.position.value,\n    office: form.elements.office.value,\n    age: form.elements.age.value,\n    salary: form.elements.salary.value,\n  };\n\n  if (objectEmployer.name.length === 0\n    || objectEmployer.position.length === 0\n    || objectEmployer.age.length === 0\n    || objectEmployer.salary.length === 0\n  ) {\n    showNotification('error', 'You should fill all inputs');\n\n    return false;\n  }\n\n  if (objectEmployer.name.length < 4) {\n    showNotification('error', 'Name field must contain at lest 4 letters');\n\n    return false;\n  }\n\n  if (!Number.isNaN(+objectEmployer.position)) {\n    showNotification('error', 'The Position field must contain only letters');\n\n    return false;\n  }\n\n  if (objectEmployer.age < 18 || objectEmployer.age > 90) {\n    showNotification('error', 'The age field must be between 18 and 90');\n\n    return false;\n  }\n\n  employerTR.insertAdjacentHTML('afterbegin',\n    `<td>${objectEmployer.name}</td>\n    <td>${objectEmployer.position}</td>\n    <td>${objectEmployer.office}</td>\n    <td>${objectEmployer.age}</td>\n    <td>${'$' + Intl.NumberFormat('en-US').format(objectEmployer.salary)}</td>`\n  );\n\n  showNotification('success', 'Employer is added');\n  table.tBodies[0].append(employerTR);\n  // обновить массив рядов таблицы после добавления сотрудника\n  arrayRows = [...table.tBodies[0].rows];\n\n  for (let i = 0; i < [...form.querySelectorAll('input')].length; i++) {\n    form.querySelectorAll('input')[i].value = '';\n  }\n});\n\ntable.addEventListener('dblclick', e => {\n  const td = e.target;\n\n  if (!td.closest('td')) {\n    return false;\n  }\n\n  const content = td.textContent;\n  const input = document.createElement('input');\n\n  input.classList.add('cell-input');\n\n  /* Обновить переменную, т.к. до этого она была null */\n  notification = document.querySelector('.notification');\n\n  if (notification && td) {\n    notification.remove(); /* Удалить сообщение о добавлении / ошибке */\n  }\n\n  td.textContent = '';\n  td.append(input);\n  input.focus();\n\n  input.onkeydown = function(ev) {\n    if (ev.code === 'Enter') {\n      input.blur();\n    }\n  };\n\n  input.addEventListener('blur', function() {\n    const tableDataCell = e.target.closest('td');\n    const value = input.value;\n\n    function setData(message) {\n      showNotification('error', message);\n      td.textContent = content;\n\n      return false;\n    }\n\n    if (tableDataCell.cellIndex === 0) {\n      if (value.length < 4 || !Number.isNaN(+value)) {\n        return setData('The Name field must contain at lest 4 letters');\n      }\n    } else if (tableDataCell.cellIndex === 1) {\n      if (!Number.isNaN(+value)) {\n        return setData('The Position field must contain only letters');\n      }\n    } else if (tableDataCell.cellIndex === 3) {\n      if ((+value < 18 || +value > 90) || Number.isNaN(+value)) {\n        return setData('The age field must be between 18 and 90');\n      }\n    } else if (tableDataCell.cellIndex === 4) {\n      if (Number.isNaN(+value)) {\n        return setData('The salary field must contain only letters');\n      }\n    }\n\n    input.remove();\n\n    td.textContent = value;\n\n    if (tableDataCell.cellIndex === 4) {\n      td.textContent = '$' + Intl.NumberFormat('en-US').format(value);\n    }\n  });\n});\n"]}